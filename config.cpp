                      /*  Данный скрипт общего доступа скачан с https://github.com/Fickdichhard/A3XAI-UPLOAD
					  перевод на Русский язык осуществил Zanfirov Oleksii   https://www.exilemod.com/profile/96891-zefa/
					                                                        https://steamcommunity.com/id/zefa91/
					  */
class CfgPatches {
	class A3XAI_config {
		units[] = {};
		weapons[] = {};
		requiredVersion = 0.1;
		A3XAIVersion = "0.2.1";
		requiredAddons[] = {};
	};
};

class CfgA3XAISettings {

	/*	Настройки A3XAI
	--------------------------------------------------------------------------------------------------------------------*/	
	
	//Включение или отключение регистрации событий в файле RPT сервера (с именем arma3server_ [дата] _ [время] .rpt).
	//Настройка уровня отладки. 0: нет вывода отладки, 1: вывод основной отладки, 2: вывод подробной отладки. (По умолчанию: 0)
	// Отладочный вывод может помочь найти дополнительную информацию о фоновом поведении A3XAI.
	//Этот вывод полезен при обращении за помощью в отношении ошибок или неожиданного поведения.
	debugLevel = 0;
	
	
	//Частота обновления монитора сервера до журнала RPT в секундах.
	//Монитор периодически сообщает в журнале RPT количество макс / текущих единиц ИИ и динамически порождает триггеры.
	//(По умолчанию: 300, 0 = отключить отчеты)											
	monitorReportRate = 300;
	
	// Включаем или отключаем проверку и исправление ошибок таблиц имен классов, используемых A3XAI.
	//Если найдены недействительные записи, они удаляются и регистрируются в журнале RPT.
	// Если отключено, любые недопустимые имена классов не будут удалены, и клиенты могут потерпеть крах, если тела AI с недопустимыми элементами будут разграблены.
	//Отключать только в том случае, если в предыдущем сканировании нет недопустимых имен классов (по умолчанию: 1).										
	verifyClassnames = 1;
	
	//Включает проверку всех настроек конфигурации A3XAI. (По умолчанию: 1)
	verifySettings = 1;
	
	//Минимум секунд до тех пор, пока каждый убитый ИИ или уничтоженное транспортное средство не будет очищен планировщиком задач A3XAI.
	//A3XAI не будет убирать тело / транспортное средство, если рядом находится игрок (по умолчанию: 900).									
	cleanupDelay = 900;
	
	//Включено: A3XAI загрузит пользовательский файл определений spawn / blacklist при запуске (A3XAI_config.pbo >> custom_defs.sqf) (по умолчанию: 0)
	loadCustomFile = 0;
	
	
	/*	A3XAI HC Настройки
	--------------------------------------------------------------------------------------------------------------------*/	

	// Включает поддержку автономного клиента A3XAI. (По умолчанию: 0)
	enableHC = 0;
	
	// Если поддержка HC включена, A3XAI будет приостанавливаться во время пост-инициализации, пока HC не будет успешно подключен. (По умолчанию: 0)
	// ВАЖНО: Настоятельно рекомендуется убедиться, что HC настроен правильно перед включением этой опции, в противном случае A3XAI может зависнуть в ожидании подключения HC.
	waitForHC = 0;

	
	/*	Настройки динамического имени класса

		Если настройка стандартная, A3XAI будет использовать соответствующую таблицу имен классов ниже. См. Раздел «Настройки AI одежды, оружия, добычи и снаряжения».
	--------------------------------------------------------------------------------------------------------------------*/	
	
	// Предельная цена покупки для товаров, сгенерированных системой динамических имен классов, как определено в CfgExileArsenal.
	//Понижение этого значения может уменьшить разнообразие предметов, переносимых ИИ. (По умолчанию: 2000)
	itemPriceLimit = 2000;
	
	
	// 1: генерировать AI оружие из таблиц трейдеров изгнанников (по умолчанию)
	// 0: Оружие определено по пистолетам, rifleList, machinegunList, sniperList
	// dynamicWeaponBlacklist: Имена классов оружия, которые нужно игнорировать из таблиц трейдеров изгнания
	generateDynamicWeapons = 1;
	dynamicWeaponBlacklist[] = {};
	
	// 1: Использовать данные таблицы изгнания изгнания в качестве белого списка для областей применения оружия, которые можно использовать для ИИ (по умолчанию)
	// 0: области действия, определенные параметром WeapobPticsList
	// dynamicOpticsBlacklist: список имен классов оптики, которые следует игнорировать из таблиц трейдера Exile.
	generateDynamicOptics = 1;
	dynamicOpticsBlacklist[] = {};
	
	
	// 1: генерировать типы униформы AI из таблиц трейдеров Exile (по умолчанию)
	// 0: Униформа, определенная с помощью uniformTypes0 ,uniformTypes1 ,uniformTypes2 ,uniformTypes3
	// dynamicUniformBlacklist: список унифицированных имен классов, которые следует игнорировать из таблиц трейдеров Exile.
	generateDynamicUniforms = 1;
	dynamicUniformBlacklist[] = {};
	
	// 1: Создать типы рюкзака AI из таблиц трейдеров Exile (по умолчанию)
	// 0: рюкзаки определены по backpackTypes0, backpackTypes1, backpackTypes2, backpackTypes3
	// dynamicBackpackBlacklist: список имен классов рюкзака, которые следует игнорировать из таблиц трейдера Exile.
	generateDynamicBackpacks = 1;
	dynamicBackpackBlacklist[] = {};
	
	
	// 1: Создать типы желетов AI из таблиц трейдеров Exile (по умолчанию)
	// 0: Жилеты определены с помощью vestTypes0, vestTypes1, vestTypes2, vestTypes3
	// dynamicVestBlacklist: список имен классов жилетов, которые следует игнорировать из таблиц трейдеров Exile.
	generateDynamicVests = 1;
	dynamicVestBlacklist[] = {};
	
	// 1: генерировать типы головных уборов AI из таблиц трейдеров Exile (по умолчанию)
	// 0: Headgear, определенный headgearTypes0, headgearTypes1, headgearTypes2, headgearTypes3
	// dynamicHeadgearBlacklist: список имен классов головных уборов, которые следует игнорировать из таблиц трейдеров Exile.
	generateDynamicHeadgear = 1;
	dynamicHeadgearBlacklist[] = {};
	
	// 1: генерировать типы еды AI из таблиц трейдеров изгнанников (по умолчанию)
	// 0: Пища, определенная foodLoot
	// dynamicFoodBlacklist: список имен продуктов, которые нужно игнорировать из таблиц трейдера Exile.
	generateDynamicFood = 1;
	dynamicFoodBlacklist[] = {};
	
	// 1: Генерировать типовые типы лута AI из таблиц трейдеров Exile. Включает в себя предметы класса «Hardware», «Smoke», «Flare». (По умолчанию)
	// 0: добыча определяется MiscLoot
	// dynamicLootBlacklist: список имен классов, которые нужно игнорировать из таблиц трейдера Exile.
	generateDynamicLoot = 1;
	dynamicLootBlacklist[] = {};


	// Включить или отключить прием радиосообщений. Игроки с радио или частью группы с хотя бы одним радио смогут перехватывать некоторые сообщения AI. (По умолчанию: 0)
	enableRadioMessages = 0;


	/*Настройки общего ИИ модуля. Эти настройки влияют на весь ИИ, если не указано иное.
	--------------------------------------------------------------------------------------------------------------------*/	
	
	
	// Устанавливает сторону / фракцию для ИИ, порожденного A3XAI.
	//Если юниты A3XAI враждебны с ИИ, порожденным другими аддонами установки, рассмотрите возможность изменения этого параметра.
	//Допустимые стороны: (восток - east) или (запад - west)(по умолчанию: восток)
	side = east;
	
	// Количество игроков в сети, необходимое для максимального (или минимального) шанса появления ИИ.
	//Влияет на статический, динамический и случайный AI. (По умолчанию: 10)	
	playerCountThreshold = 10;
	
	
	// 1: множитель вероятности появления увеличивается от значения, заданного параметром chanceScalingThreshold,
	// до 1,00. 0: множитель шанса спавна масштабируется вниз от 1,00 до chanceScalingThreshold.
	upwardsChanceScaling = 1;
	
	//If upwardsChanceScaling is 1: Initial spawn chance multiplier. If upwardsChanceScaling is 0: Final spawn chance multiplier. (Default: 0.50)
	chanceScalingThreshold = 0.50;
	
	
	// (Статическое / Динамическое / Случайное порождение в Поселках ) 
	//minAI: Минимальное количество единиц. addAI: максимальное количество дополнительных единиц. unitLevel: уровень юнита (0-3)
	minAI_village = 1;
	addAI_village = 1;
	unitLevel_village = 0;
	spawnChance_village = 0.40;
	
	// (Статическое / Динамическое / Случайное порождение в Городах) 
	//minAI: Минимальное количество единиц. addAI: максимальное количество дополнительных единиц. unitLevel: уровень юнита (0-3)
	minAI_city = 1;
	addAI_city = 2;
	unitLevel_city = 1;
	spawnChance_city = 0.60;
	
	// (Статическое / Динамическое / Случайное порождение в Столицах) 
	//minAI: Минимальное количество единиц. addAI: максимальное количество дополнительных единиц. unitLevel: уровень юнита (0-3)
	minAI_capitalCity = 2;
	addAI_capitalCity = 1;
	unitLevel_capitalCity = 1;
	spawnChance_capitalCity = 0.70;
	
	
	// (Статическое / Динамическое / Случайное порождение на Удаленной территории) 
	//minAI: Минимальное количество единиц. addAI: максимальное количество дополнительных единиц. unitLevel: уровень юнита (0-3)
	minAI_remoteArea = 1;
	addAI_remoteArea = 2;
	unitLevel_remoteArea = 2;
	spawnChance_remoteArea = 0.80;
	
	// (Статическое / Динамическое / Случайное порождение в пустыни) 
	//minAI: Минимальное количество единиц. addAI: максимальное количество дополнительных единиц. unitLevel: уровень юнита (0-3)
	minAI_wilderness = 1;
	addAI_wilderness = 2;
	unitLevel_wilderness = 1;
	spawnChance_wilderness = 0.50;
	
	// (только для динамического и случайного появления) 
	//Определяет время ожидания в секундах до очистки временной области черного списка после деактивации динамического / случайного появления (по умолчанию: 1200)
	tempBlacklistTime = 1200;
	
	// Включить или отключить сообщения о смерти AI. 
	//Сообщения будут видны всем членам группы игрока, ответственного за убийство ИИ. (По умолчанию: 1)
	enableDeathMessages = 1;
	
	// Если эта функция включена, AI-группа попытается отследить игрока, ответственного за убийство члена группы. (По умолчанию: 1)
	enableFindKiller = 1;
	
	
	// Если обычная проверка вероятности появления невидимых NVG не удалась, тогда выдайте временные NVG ИИ в ночное время. 
	//Временные NVG нельзя просмотреть и они будут удалены при смерти (по умолчанию: 0).									
	enableTempNVGs = 0;
	
	
	// Требование минимального уровня ИИ для использования подствольных гранатометов. 
	//Установите -1, чтобы полностью отключить. (По умолчанию: 1)
	levelRequiredGL = 1;
	
	// Требование минимального уровня ИИ для использования оружия запуска. Установите -1, чтобы полностью отключить. 
	//Пусковые установки недоступны для просмотра и будут удалены при смерти (по умолчанию: -1)
	levelRequiredLauncher = -1;
	
	// Список оружия типа пусковой установки, которое AI может использовать.
	launcherTypes[] = {"launch_NLAW_F","launch_RPG32_F","launch_B_Titan_F","launch_I_Titan_F","launch_O_Titan_F","launch_B_Titan_short_F","launch_I_Titan_short_F","launch_O_Titan_short_F"}; 
	
	// Максимально допустимое количество пускового оружия на группу (по умолчанию: 1)
	launchersPerGroup = 1;
	
	// Включить или отключить самовосстановление ИИ. Уровень 0 AI не может лечить себя. Влияет: Все пехотные подразделения ИИ (по умолчанию: 1).
	enableHealing = 1;
	
	// Если включено, A3XAI удалит все взрывные боеприпасы (ракеты, ракеты, бомбы - но не патроны ОН) из порожденных воздушных судов ИИ. (По умолчанию: 1)
	// Влияет: Все типы самолетов ИИ (патрулирование / таможня / подкрепление). Не влияет на БПЛА / UGV.
	//Смысл тогда из беспелотника , можете просто ужалить их из спавни дабы не засорять сервер !!!
	removeExplosiveAmmo = 1;
	
	// если включено, ИИ не страдают от столкновений транспортных средств. (По умолчанию: 1)
	noCollisionDamage = 1;
	
	// Если включено, ИИ, убитый при столкновении с автомобилем, уберет свое снаряжение (по умолчанию: 1)
	roadKillPenalty = 1;
	
	// Массив позиций, определяющий местоположение трейдера. ИИ будет не враждебным и наносит урон в этой области.
	// Используйте это, если ваш сервер не использует стандартные маркеры или датчики Exile trader в mission.sqm
	// Из соображений производительности не добавляйте в этот массив места, отличные от реальных позиций трейдера.
	// Пример: traderAreaLocations [] = {{2998.06,18175.5,0}, {14600,16797.2,0}, {23334.6,24188.9,0}};
	traderAreaLocations[] = {};
	
	
	/*	Настройки статического пехотного AI

		A3XAI будет порождать группу ИИ в различных названных местах на карте, если рядом находятся игроки.
	--------------------------------------------------------------------------------------------------------------------*/	
	
	// Включение или отключение статического ИИ. Если включено, точки появления ИИ будут генерироваться в городах, поселках и других названных областях.
	// Включено: A3XAI автоматически генерирует статические появления в именованных местоположениях на карте. 
	//Если же отключено: статические не будут создаваться. (По умолчанию: 1)
	enableStaticSpawns = 1;
	
	// Установить минимальное и максимальное время ожидания (в секундах) для возрождения группы ИИ после того, как все подразделения были убиты. 
	//Применяется как к статическому ИИ, так и к пользовательскому ИО (по умолчанию: минимум 300, максимум 600).								
	respawnTimeMin = 300;
	respawnTimeMax = 600;
	
	
	// Время, позволяющее появившимся искусственным интеллектам существовать в секундах до того, как их исчезнет, ​​когда в зоне триггера нет игроков. 
	//Применяется как к статическому ИИ, так и к пользовательскому ИИ (по умолчанию: 120)										
	despawnWait = 120;
	
	
	// Respawn Limits. Установите -1 для неограниченного числа респавнов. (По умолчанию: -1 для каждого).
	respawnLimit_village = -1;
	respawnLimit_city = -1;
	respawnLimit_capitalCity = -1;
	respawnLimit_remoteArea = -1;
	
	
	/*	Динамические настройки пехотного AI. Вероятности должны составлять до 1,00	

		A3XAI создаст окружающую угрозу в области для каждого игрока, периодически вызывая ИИ для создания неожиданных встреч в засаде. 
		Эти ИИ могут иногда искать и охотиться на игрока. 
	--------------------------------------------------------------------------------------------------------------------*/		

	
	// Верхний предел динамического появления на карте сразу. Установите 0, чтобы отключить динамическое порождение (по умолчанию: 15)
	maxDynamicSpawns = 15;
	
	// Минимальное время (в секундах), которое должно пройти между динамическими порождениями для каждого игрока (по умолчанию: 900)
	timePerDynamicSpawn = 900;
	
	// Игрокам, не подключенным к сети в течение этого времени (в секундах), будет сброшена отметка времени их последнего спавна (по умолчанию: 3600)
	purgeLastDynamicSpawnTime = 3600;
	
	
	// Вероятность того, что динамический ИИ будет активно охотиться на целевого игрока. 
	//Если проверка вероятности не удалась, динамический ИИ будет патрулировать область вместо охоты (по умолчанию: 0.60)
	spawnHunterChance = 0.60;
	
	// Время ожидания (в секундах) перед исчезновением всех ИИ юнитов в зоне динамического появления, когда нет игроков. (По умолчанию: 120)
	despawnDynamicSpawnTime = 120;
	
	
	/*	Случайные настройки пехотного AI

		A3XAI создаст икру, которые будут случайным образом размещены вокруг карты и периодически перемещаться. 
		Эти спавны создаются преимущественно в именованных местах, но также могут быть созданы в любой точке мира. 
	--------------------------------------------------------------------------------------------------------------------*/		

	//Maximum number of placed random spawns on map. Set to -1 for A3XAI to automatically adjust spawn limit according to map size. Set to 0 to disable random spawns. (Default: -1)
	maxRandomSpawns = -1;
	
	// Время ожидания (в секундах) перед исчезновением всех ИИ юнитов в области случайного появления, когда нет игроков. (По умолчанию: 120)
	despawnRandomSpawnTime = 120;	
	
	// Минимальное расстояние между местом случайного появления и другими случайными появлением. (По умолчанию: 0)
	distanceBetweenRandomSpawns = 0;
	
	
	/*	Настройки общего техники ИИ

		Эти настройки влияют на следующие типы патрулей AI: Air, Land, UAV, UGV
	--------------------------------------------------------------------------------------------------------------------*/

	// Время ожидания (в секундах) перед исчезновением заблокированных / уничтоженных автомобилей ИИ. 
	//Если carsAllowedForPlayers включен, этот таймер очищается, когда игрок входит в транспортное средство. (По умолчанию: 600)
	vehicleDespawnTime = 600;
	
	// Разрешить игроку использовать AI машины. 
	//Игроки должны либо отключить транспортное средство, либо убить все подразделения группы, чтобы получить доступ к транспортному средству. (По умолчанию: 0)
	vehiclesAllowedForPlayers = 0;
	
	// Добавляем название местоположения, отображаемое на карте, для предотвращения патрулирования транспортных средств AI в этих местах. 
	//Имена локаций чувствительны к регистру. Примечание: транспортные средства могут все еще проезжать через эти области
	// Пример: waypointBlacklistAir [] = {"Aggelochori", "Panochori", "Zaros"};
	waypointBlacklistAir[] = {}; //Влияет на воздушные транспортные средства (включая БПЛА)
	waypointBlacklistLand[] = {};  //Влияет на наземные транспортные средства (включая UGV)
	
	
	/*	Настройки патрулирования AI Air Vehicle.

		ВАЖНО: БПЛА (беспилотные летательные аппараты) не поддерживаются этой функцией. Спавны БПЛА можно настроить в разделе «Настройки патруля БПЛА» ниже.

		A3XAI будет создавать патрули ИИ для транспортных средств, которые будут случайным образом перемещаться между разными городами и городами и привлекать любых встреченных игроков.
		Вертолеты с доступным грузовым пространством могут также иногда развертывать группу ИИ на парашюте.
	--------------------------------------------------------------------------------------------------------------------*/		

	// Глобальное максимальное количество активных патрулей авиатехники AI. Установите на 0, чтобы отключить (по умолчанию: 0).							
	maxAirPatrols = 0;	
	
	//Вероятность нереста Уровень 0/1/2/3 Появляется патруль ИИ воздушного транспорта. Вероятности должны составлять до 1,00		
	levelChancesAir[] = {0.00,0.50,0.35,0.15};
	
	//Установите минимальное и максимальное время ожидания в секундах, чтобы возродить патруль ИИ после того, как транспортное средство уничтожено или заблокировано. 
	//(По умолчанию: Мин. 600, Макс. 900).
	respawnAirMinTime = 600;
	respawnAirMaxTime = 900;
	
	//Имена классов используемых типов воздушных транспортных средств, с максимальным количеством каждого типа для появления.
	airVehicleList[] = {
		{"B_Heli_Light_01_armed_F",5},
		{"B_Heli_Transport_01_F",5},
		{"B_Heli_Transport_03_F",2}
	};
	
	//Максимальное количество стрелковых единиц на воздушное транспортное средство. Ограничено фактическим количеством доступных позиций стрелка. (По умолчанию: 2)
	// Влияет: все патрули AI авиатранспорта, включая кастом и подкрепление.
	airGunnerUnits = 2;
	
	//Вероятность успешного обнаружения вертолетом ИИ игрока, если он находится на линии прямой видимости. Вертолеты AI будут выполнять визуальную развертку при прибытии в каждую точку пути и на некотором расстоянии после вылета. (По умолчанию: 0,80)
	// Влияет: все патрули AI авиатранспорта, включая кастом и подкрепление.
	airDetectChance = 0.80;
	
	// Вероятность того, что ИИ развернет пехотные подразделения на парашюте, если рядом находятся игроки, когда вертолет исследует путевую точку. (По умолчанию: 0.50)
	// Влияет: патрулирование воздушного транспорта.
	paradropChance = 0.50;
	
	//Время перезарядки ИИ-парапода в секундах. (По умолчанию: 1800).
	// Влияет: патрулирование воздушного транспорта.
	paradropCooldown = 1800;
	
	// Количество ИИ пехоты для парапинга, если игроки находятся рядом, когда вертолет исследует путевую точку, или если вертолет усиливает динамическое появление ИИ. Ограничено количеством грузовых мест в транспортном средстве. (По умолчанию: 3)
	// Аффекты: патрулирование авиатранспорта, авиационное подкрепление.
	paradropAmount = 3;
	
	
	/*	Настройки патрулирования AI Land Vehicle. Эти машины ИИ будут случайным образом путешествовать между разными городами.

		ВАЖНО: UGV (беспилотные наземные транспортные средства) не поддерживаются этой функцией. Спавны UGV могут быть настроены в разделе «Настройки патруля UGV» далее ниже.
		
		A3XAI будет создавать патрули ИИ для транспортных средств, которые будут случайным образом перемещаться между разными городами и городами и привлекать любых встреченных игроков.
	--------------------------------------------------------------------------------------------------------------------*/	

	//Глобальное максимальное количество активных патрулей наземных транспортных средств ИИ. Установите на 0, чтобы отключить (по умолчанию: 0).	
	maxLandPatrols = 0;
	
	//Вероятность нереста Уровень 0/1/2/3 ИИ наземных транспортных средств нерестится. Вероятности должны составлять до 1,00	
	levelChancesLand[] = {0.00,0.50,0.35,0.15};
	
	//Установите минимальное и максимальное время ожидания в секундах, чтобы возродить патруль ИИ после того, как транспортное средство уничтожено или заблокировано. 
	//(По умолчанию: Мин. 600, Макс. 900).
	respawnLandMinTime = 600;
	respawnLandMaxTime = 900;
	
	// Имена классов типов используемых наземных транспортных средств, с максимальным количеством каждого типа для появления.
	landVehicleList[] = {
		{"Exile_Car_Hatchback_Rusty1",5},
		{"Exile_Car_Hatchback_Rusty2",5},
		{"Exile_Car_Hatchback_Rusty3",5},
		{"Exile_Car_Hatchback_Sport_Red",5},
		{"Exile_Car_SUV_Red",5},
		{"Exile_Car_Offroad_Rusty1",5},
		{"Exile_Car_Offroad_Rusty2",5},
		{"Exile_Car_Offroad_Rusty3",5},
		{"Exile_Car_Offroad_Repair_Civillian",5},
		{"Exile_Car_Offroad_Armed_Guerilla01",5},
		{"Exile_Car_Strider",5},
		{"Exile_Car_Hunter",5},
		{"Exile_Car_Ifrit",5},
		{"Exile_Car_Van_Black",5},
		{"Exile_Car_Van_Box_Black",5},
		{"Exile_Car_Van_Fuel_Black",5},
		{"Exile_Car_Zamak",5},
		{"Exile_Car_Tempest",5},
		{"Exile_Car_HEMMT",5}
	};
	
	//Максимальное количество стрелковых единиц на наземное транспортное средство. 
	//Ограничено фактическим количеством доступных позиций стрелка. (По умолчанию: 2)
	landGunnerUnits = 2;
	
	//Максимальное количество грузовых единиц на наземное транспортное средство. 
	//Ограничено фактическим количеством доступных грузовых позиций. (По умолчанию: 3)
	landCargoUnits = 3;
	
	
	/*	Настройки подкрепления AI Air

		Разрешенные типы групп ИИ (определенные airReinforcementAllowedTypes) могут вызывать временное подкрепление, если игрок убивает одного из своих юнитов.
		Вероятность вызова подкрепления определяется airReinforcementSpawnChance <AI level>, где <AI level> - уровень вызывающей группы.
		После вызова вооруженные подкрепляющие машины будут оставаться в области в течение времени, определенного airReinforcementDuration <AI level>, и привлекать соседних игроков.
		Невооруженные подкрепляющие машины развернут группу парапотов и покинут территорию.
		
	--------------------------------------------------------------------------------------------------------------------*/

	//Максимально допустимое количество одновременных активных подкреплений (по умолчанию: 5)
	maxAirReinforcements = 5;
	
	//Воздушные транспортные средства для использования в качестве подкрепления транспортных средств. По умолчанию: {"B_Heli_Transport_01_F", "B_Heli_Light_01_armed_F"}
	// Вооруженные воздушные транспортные средства будут обнаруживать и вовлекать игроков в зону подкрепления. Безоружные воздушные транспортные средства развернут группу параплана ИИ.
	airReinforcementVehicles[] = {
		"B_Heli_Transport_01_F",
		"B_Heli_Light_01_armed_F"
	};
	
	//Вероятность появления подкреплений для каждого уровня ИИ.
	airReinforcementSpawnChance0 = 0.00;
	airReinforcementSpawnChance1 = 0.10;
	airReinforcementSpawnChance2 = 0.20;
	airReinforcementSpawnChance3 = 0.30;
	
	//ИИ разрешено вызывать подкрепление. По умолчанию: airReinforcementAllowedFor [] = {"static", "dynamic", "random"};
	// Используемые типы AI: "static", "dynamic", "random", "air", "land", "staticcustom", "aircustom", "landcustom", "vehiclecrew"
	airReinforcementAllowedFor[] = {"static","dynamic","random"};
	
	//Максимальное время усиления для вооруженных воздушных судов в секундах. 
	//Воздушное транспортное средство AI покинет этот район после этого времени, если не будет уничтожено.
	airReinforcementDuration0 = 120;
	airReinforcementDuration1 = 180;
	airReinforcementDuration2 = 240;
	airReinforcementDuration3 = 300;
	
	
	/*	Настройки БПЛА Патруль

		ВАЖНО: патрулирование БПЛА является функцией тестирования и может претерпеть значительные изменения или возможное удаление в будущих версиях.

		A3XAI может порождать БПЛА, которые патрулируют между именованными локациями, и развертывать авиационное подкрепление, если найдены игроки.
		Для того, чтобы воздушные подкрепления были развернуты, maxAirReinforcements должно быть больше нуля, и текущий предел воздушных подкреплений не был превышен.
	--------------------------------------------------------------------------------------------------------------------*/

	//Глобальное максимальное количество активных патрулей БПЛА. Установите на 0, чтобы отключить (по умолчанию: 0).	
	maxUAVPatrols = 0;
	
	//Имена классов используемых типов БПЛА, с максимальным количеством каждого типа для появления.
	UAVList[] = {
		{"I_UAV_02_CAS_F",5},
		{"I_UAV_02_F",5},
		{"B_UAV_02_CAS_F",5},
		{"B_UAV_02_F",5},
		{"O_UAV_02_CAS_F",5},
		{"O_UAV_02_F",5}
	};
	
	//Вероятность нереста Уровень 0/1/2/3 порождает БПЛА. Вероятности должны составлять до 1,00
	levelChancesUAV[] = {0.35,0.50,0.15,0.00};
	
	//Установите минимальное и максимальное время ожидания в секундах, чтобы возродить БПЛА после того, как транспортное средство уничтожено или заблокировано. 
	//(По умолчанию: Мин. 600, Макс. 900).
	respawnUAVMinTime = 600;
	respawnUAVMaxTime = 900;
	
	//Установите «1», чтобы установить поведение только при обнаружении (БПЛА не будет напрямую привлекать врагов). (По умолчанию: 0)
	detectOnlyUAVs = 0;
	
	//Требуется перезарядка между вызовами подкрепления при обнаружении игроков. Значение в секундах. (По умолчанию: 1800)
	UAVCallReinforceCooldown = 1800;
	
	//Вероятность успешного обнаружения игрока при наличии прямой видимости. Если будет обнаружен хотя бы один игрок, в область будут вызваны подкрепления. (По умолчанию: 0.50)
	UAVDetectChance = 0.80;
	
	
	/*	Настройки патруля UGV

		ВАЖНО: патрулирование UGV является функцией тестирования и может претерпеть значительные изменения или возможное удаление в будущих версиях.

		A3XAI может порождать UGV, которые патрулируют между именованными локациями, и развертывать авиационное подкрепление, если найдены игроки. Поврежденные UGVs ремонтируются со временем, если не привлекают клизмы.
		Для того, чтобы воздушные подкрепления были развернуты, maxAirReinforcements должно быть больше нуля, и текущий предел воздушных подкреплений не был превышен.
	--------------------------------------------------------------------------------------------------------------------*/

	//Глобальное максимальное количество активных патрулей UGV. Установите на 0, чтобы отключить (по умолчанию: 0).	
	maxUGVPatrols = 0;
	
	//Имена классов используемых типов UGV, с максимальным количеством каждого типа для появления.
	UGVList[] = {
		{"I_UGV_01_rcws_F",5},
		{"B_UGV_01_rcws_F",5},
		{"O_UGV_01_rcws_F",5}
	};
	
	//Вероятность нереста Уровень 0/1/2/3 ИА UGV нерестится. Вероятности должны составлять до 1,00
	levelChancesUGV[] = {0.35,0.50,0.15,0.00};
	
	//Set minimum and maximum wait time in seconds to respawn a UGV patrol after vehicle is destroyed or disabled. (Default: Min 600, Max 900).
	respawnUGVMinTime = 600;
	respawnUGVMaxTime = 900;
	
	//Установите «1», чтобы установить поведение только при обнаружении (UGV не будет напрямую привлекать врагов). (По умолчанию: 0)
	detectOnlyUGVs = 0;
	
	//Требуется перезарядка между вызовами подкрепления при обнаружении игроков. Значение в секундах. (По умолчанию: 1800)
	UGVCallReinforceCooldown = 1800;
	
	//Вероятность успешного обнаружения игрока при наличии прямой видимости. Если будет обнаружен хотя бы один игрок, в область будут вызваны подкрепления. (По умолчанию: 0.50)
	UGVDetectChance = 0.80;
	
	
	/*
		Настройки искусственного интеллекта. 
		
		Эти настройки влияют на все юниты AI, порожденные A3XAI.
		
		Уровень умения: Описание
		0: (Low-level)в деревнях найден ИИ низкого уровня
		1: (Medium-level) ИИ среднего уровня найден в городах и столицах
		2: (High-level) ИИ высокого уровня обнаружен в отдаленных районах, таких как заводы и военные базы
		3: Expert-level AI - AI уровня эксперта.
		
		Допустимый диапазон навыков: 0,00 - 1,00.
		Подсказка: для всех типов умений большее число = лучшее умение. Для объяснения подтипа навыка, см.: https://community.bistudio.com/wiki/AI_Sub-skills
	*/
	
	//Уровень навыка AI AI 0 (навык, минимальный навык, максимальный навык). Значения по умолчанию: точность 0,05-0,10, другие 0,30-0,50
	skill0[] = {
		{"aimingAccuracy",0.05,0.10},
		{"aimingShake",0.30,0.50},
		{"aimingSpeed",0.30,0.50},
		{"spotDistance",0.30,0.50},
		{"spotTime",0.30,0.50},
		{"courage",0.30,0.50},
		{"reloadSpeed",0.30,0.50},
		{"commanding",0.30,0.50},
		{"general",0.30,0.50}
	};
	
	// Уровень мастерства ИИ 1 уровня (Навык, Минимальный навык, Максимальный навык). Значения по умолчанию: точность 0,10-0,15, другие 0,40-0,60
	skill1[] = {
		{"aimingAccuracy",0.10,0.15},
		{"aimingShake",0.40,0.60},
		{"aimingSpeed",0.40,0.60},
		{"spotDistance",0.40,0.60},
		{"spotTime",0.40,0.60},
		{"courage",0.40,0.60},
		{"reloadSpeed",0.40,0.60},
		{"commanding",0.40,0.60},
		{"general",0.40,0.60}	
	};
	
	//Уровень мастерства ИИ 2 уровня (Навык, Минимальный навык, Максимальный навык). Значения по умолчанию: точность 0,15-0,20, другие 0,50-0,70
	skill2[] = {
		{"aimingAccuracy",0.15,0.20},
		{"aimingShake",0.50,0.70},
		{"aimingSpeed",0.50,0.70},
		{"spotDistance",0.50,0.70},
		{"spotTime",0.50,0.70},
		{"courage",0.50,0.70},
		{"reloadSpeed",0.50,0.70},
		{"commanding",0.50,0.70},
		{"general",0.50,0.70}
	};
	
	//Уровень искусственного интеллекта 3 уровня (Навык, Минимальный навык, Максимальный навык). Значения по умолчанию: точность 0,20-0,25, другие 0,60-0,80
	skill3[] = {
		{"aimingAccuracy",0.20,0.25},
		{"aimingShake",0.60,0.80},
		{"aimingSpeed",0.60,0.80},
		{"spotDistance",0.60,0.80},
		{"spotTime",0.60,0.80},
		{"courage",0.60,0.80},
		{"reloadSpeed",0.60,0.80},
		{"commanding",0.60,0.80},
		{"general",0.60,0.80}
	};
	
	
	/*	Настройки вероятности выгрузки AI.
	--------------------------------------------------------------------------------------------------------------------*/

	//Возможности оборудовать рюкзак, в соответствии с уровнем AI.
	addBackpackChance0 = 0.60;
	addBackpackChance1 = 0.70;
	addBackpackChance2 = 0.80;
	addBackpackChance3 = 0.90;
	
	//Возможности экипировать жилет, в соответствии с уровнем AI.
	addVestChance0 = 0.60;
	addVestChance1 = 0.70;
	addVestChance2 = 0.80;
	addVestChance3 = 0.90;
	
	//Вероятность экипировать головной убор в соответствии с уровнем искусственного интеллекта.
	addHeadgearChance0 = 0.60;
	addHeadgearChance1 = 0.70;
	addHeadgearChance2 = 0.80;
	addHeadgearChance3 = 0.90;
	
	//Вероятность оснащения AI уровня 0-3 каждым типом оружия. Заказ: {пистолеты, винтовки, пулеметы, снайперские винтовки}. Вероятности должны составлять до 1,00.
	useWeaponChance0[] = {0.20,0.80,0.00,0.00};
	useWeaponChance1[] = {0.00,0.90,0.05,0.05};
	useWeaponChance2[] = {0.00,0.80,0.10,0.10};
	useWeaponChance3[] = {0.00,0.70,0.15,0.15};
	
	//Вероятность выбора случайного вложения оптики (т.е. областей) для уровня 0-3 AI
	opticsChance0 = 0.00;
	opticsChance1 = 0.30;
	opticsChance2 = 0.60;
	opticsChance3 = 0.90;
	
	//Вероятность выбора случайного вложения указателя (т.е. фонариков) для уровня 0-3 AI
	pointerChance0 = 0.00;
	pointerChance1 = 0.30;
	pointerChance2 = 0.60;
	pointerChance3 = 0.90;
	
	//Вероятность выбора случайного мордового вложения (т. Е. Подавителей) для уровня 0-3 AI
	muzzleChance0 = 0.00;
	muzzleChance1 = 0.30;
	muzzleChance2 = 0.60;
	muzzleChance3 = 0.90;
	
	// Вероятность выбора случайного вложения под стволом (то есть: сошки) для уровня 0-3 AI
	underbarrelChance0 = 0.00;
	underbarrelChance1 = 0.30;
	underbarrelChance2 = 0.60;
	underbarrelChance3 = 0.90;
	
	
	/*	Настройки количества лута AI
	--------------------------------------------------------------------------------------------------------------------*/

	//Максимальное количество предметов для добычи пищи, найденных на AI. (По умолчанию: 2)								
	foodLootCount = 2;
	
	//Максимальное количество предметов для выбора из таблицы MiscLoot (generic loot). (По умолчанию: 2)											
	miscLootCount = 2;
	
	
	/*	Настройки вероятности лута AI. Лут AI заранее генерируется в пул для каждого юнита и случайным образом тянется к юнитам с течением времени.
	--------------------------------------------------------------------------------------------------------------------*/

	//Шанс добавить один InstaDoc в пул групповой добычи на единицу (по умолчанию: 0,25)
	firstAidKitChance = 0.25;
	
	//Вероятность успешного получения случайного предмета из пула добычи для уровня 0-3 AI. Влияет на скорость, с которой предметы лута добавляются к юнитам.
	lootPullChance0 = 0.20;
	lootPullChance1 = 0.40;
	lootPullChance2 = 0.60;
	lootPullChance3 = 0.80;
	
	
	/*	Уважайте награды за убийства ИИ. Примечание. Этот раздел действует только в том случае, если включен enableRespectRewards.
	--------------------------------------------------------------------------------------------------------------------*/

	//Разрешить обработку в стиле изгнания (то есть: уважать награды, отслеживать количество убийств) для убийств ИИ (по умолчанию: 1)
	enableRespectRewards = 1;
	
	//Респект бонус за убийства топором
	respectHumiliation = 300;
	
	//Респект бонус за стандартные убийства
	respectFragged = 100;
	
	//Респект бонус за убийства при столкновении с парашютом
	respectChute = 600;
	
	//Респект бонус за столкновения убивает с воздушным транспортным средством
	respectBigBird = 600;
	
	//Респект бонус за убийства столкновения водителем транспортного средства
	respectRoadkill = 500;
	
	//Респект бонус за убийства из транспортного оружия
	respectLetItRain = 150;
	
	//Респект бонус за серию убийств
	respectKillstreak = 50;
	
	//Респект бонус за 100 м от цели
	respectPer100m = 10;
	
	
	/*
		Настройки скинов, оружия, добычи и снаряжения AI

		Примечание. Некоторые из приведенных ниже таблиц могут не использоваться A3XAI, если включена настройка динамического имени класса. Проверьте каждый раздел ниже для деталей.
	*/

	//ИИ униформы классов. Примечание :iformTypes0-3 не будет читаться, если включен generateDynamicUniforms.
	//------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	uniformTypes0[] = {"U_C_Journalist","U_C_Poloshirt_blue","U_C_Poloshirt_burgundy","U_C_Poloshirt_salmon","U_C_Poloshirt_stripped","U_C_Poloshirt_tricolour","U_C_Poor_1","U_C_Poor_2","U_C_Poor_shorts_1","U_C_Scientist"};
	uniformTypes1[] = {"U_B_CombatUniform_mcam_worn","U_B_CTRG_1","U_B_CTRG_2","U_B_CTRG_3","U_I_CombatUniform","U_I_CombatUniform_shortsleeve","U_I_CombatUniform_tshirt","U_I_OfficerUniform","U_O_CombatUniform_ocamo","U_O_CombatUniform_oucamo","U_C_HunterBody_grn","U_IG_Guerilla1_1","U_IG_Guerilla2_1","U_IG_Guerilla2_2","U_IG_Guerilla2_3","U_IG_Guerilla3_1","U_BG_Guerilla2_1","U_IG_Guerilla3_2","U_BG_Guerrilla_6_1","U_BG_Guerilla1_1","U_BG_Guerilla2_2","U_BG_Guerilla2_3","U_BG_Guerilla3_1","U_BG_leader","U_IG_leader","U_B_GhillieSuit","U_I_GhillieSuit","U_O_GhillieSuit","U_B_HeliPilotCoveralls","U_I_HeliPilotCoveralls","U_B_PilotCoveralls","U_I_pilotCoveralls"};
	uniformTypes2[] = {"U_OrestesBody","U_NikosAgedBody","U_NikosBody","U_B_CombatUniform_mcam","U_B_CTRG_1","U_B_CTRG_2","U_B_CTRG_3","U_O_OfficerUniform_ocamo","U_B_SpecopsUniform_sgg","U_O_SpecopsUniform_blk","U_O_SpecopsUniform_ocamo","U_I_G_Story_Protagonist_F","U_IG_Guerilla2_1","U_BG_Guerrilla_6_1","U_I_G_resistanceLeader_F","U_B_FullGhillie_ard","U_B_FullGhillie_lsh","U_B_FullGhillie_sard","U_B_GhillieSuit","U_I_FullGhillie_ard","U_I_FullGhillie_lsh","U_I_FullGhillie_sard","U_I_GhillieSuit","U_O_FullGhillie_ard","U_O_FullGhillie_lsh","U_O_FullGhillie_sard","U_O_GhillieSuit","U_I_Wetsuit","U_O_Wetsuit","U_B_Wetsuit","U_B_survival_uniform"};
	uniformTypes3[] = {"U_OrestesBody","U_NikosAgedBody","U_NikosBody","U_O_OfficerUniform_ocamo","U_B_SpecopsUniform_sgg","U_O_SpecopsUniform_blk","U_O_SpecopsUniform_ocamo","U_I_G_Story_Protagonist_F","U_I_G_resistanceLeader_F","U_B_FullGhillie_ard","U_B_FullGhillie_lsh","U_B_FullGhillie_sard","U_I_FullGhillie_ard","U_I_FullGhillie_lsh","U_I_FullGhillie_sard","U_O_FullGhillie_ard","U_O_FullGhillie_lsh","U_O_FullGhillie_sard","U_I_Wetsuit","U_O_Wetsuit","U_B_Wetsuit","U_B_survival_uniform"};
	
	//Имена классов оружия ИИ. Примечание: pistolList, rifleList, machinegunList, sniperList не будут читаться, если включен generateDynamicWeapons.
	//------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	pistolList[] = {"hgun_ACPC2_F","hgun_P07_F","hgun_Pistol_heavy_01_F","hgun_Pistol_heavy_02_F","hgun_Rook40_F"};
	rifleList[] = {"arifle_Katiba_C_F","arifle_Katiba_F","arifle_Katiba_GL_F","arifle_Mk20_F","arifle_Mk20_GL_F","arifle_Mk20_GL_plain_F","arifle_Mk20_plain_F","arifle_Mk20C_F","arifle_Mk20C_plain_F","arifle_MX_Black_F","arifle_MX_F","arifle_MX_GL_Black_F","arifle_MX_GL_F","arifle_MXC_Black_F","arifle_MXC_F","arifle_SDAR_F","arifle_TRG20_F","arifle_TRG21_F","arifle_TRG21_GL_F"};
	machinegunList[] = {"arifle_MX_SW_Black_F","arifle_MX_SW_F","LMG_Mk200_F","LMG_Zafir_F","MMG_01_hex_F","MMG_01_tan_F","MMG_02_black_F","MMG_02_camo_F","MMG_02_sand_F"};
	sniperList[] = {"arifle_MXM_Black_F","arifle_MXM_F","srifle_DMR_01_F","srifle_DMR_02_camo_F","srifle_DMR_02_F","srifle_DMR_02_sniper_F","srifle_DMR_03_F","srifle_DMR_03_khaki_F","srifle_DMR_03_multicam_F","srifle_DMR_03_tan_F","srifle_DMR_03_woodland_F","srifle_DMR_04_F","srifle_DMR_04_Tan_F","srifle_DMR_05_blk_F","srifle_DMR_05_hex_F","srifle_DMR_05_tan_f","srifle_DMR_06_camo_F","srifle_DMR_06_olive_F","srifle_EBR_F","srifle_GM6_camo_F","srifle_GM6_F","srifle_LRR_camo_F","srifle_LRR_F"};
	
	//Настройки прицела для оружия AI. Примечание. WeapOpticsList не будет прочитан, если включен generateDynamicOptics.
	weaponOpticsList[] = {"optic_NVS","optic_SOS","optic_LRPS","optic_AMS","optic_AMS_khk","optic_AMS_snd","optic_KHS_blk","optic_KHS_hex","optic_KHS_old","optic_KHS_tan","optic_DMS","optic_Arco","optic_Hamr","Elcan_Exile","Elcan_reflex_Exile","optic_MRCO","optic_Holosight","optic_Holosight_smg","optic_Aco","optic_ACO_grn","optic_Aco_smg","optic_ACO_grn_smg","optic_Yorris","optic_MRD"};
	
	//Типы рюкзака AI (для уровней AI 0-3). Примечание: backpackTypes0-3 не будет прочитан, если включен generateDynamicBackpacks.
	//------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	backpackTypes0[] = {"B_AssaultPack_blk","B_AssaultPack_cbr","B_AssaultPack_dgtl","B_AssaultPack_khk","B_AssaultPack_mcamo","B_AssaultPack_rgr","B_AssaultPack_sgg","B_OutdoorPack_blk","B_OutdoorPack_blu","B_OutdoorPack_tan"};
	backpackTypes1[] = {"B_Bergen_blk","B_Bergen_mcamo","B_Bergen_rgr","B_Bergen_sgg","B_FieldPack_blk","B_FieldPack_cbr","B_FieldPack_ocamo","B_FieldPack_oucamo","B_OutdoorPack_blk","B_OutdoorPack_blu","B_OutdoorPack_tan","B_TacticalPack_blk","B_TacticalPack_mcamo","B_TacticalPack_ocamo","B_TacticalPack_oli","B_TacticalPack_rgr"};
	backpackTypes2[] = {"B_Bergen_blk","B_Bergen_mcamo","B_Bergen_rgr","B_Bergen_sgg","B_Carryall_cbr","B_Carryall_khk","B_Carryall_mcamo","B_Carryall_ocamo","B_Carryall_oli","B_Carryall_oucamo","B_FieldPack_blk","B_FieldPack_cbr","B_FieldPack_ocamo","B_FieldPack_oucamo","B_HuntingBackpack","B_Kitbag_cbr","B_Kitbag_mcamo","B_Kitbag_sgg"};
	backpackTypes3[] = {"B_Carryall_cbr","B_Carryall_khk","B_Carryall_mcamo","B_Carryall_ocamo","B_Carryall_oli","B_Carryall_oucamo","B_HuntingBackpack","B_Kitbag_cbr","B_Kitbag_mcamo","B_Kitbag_sgg"};
	
	//Типы жилетов AI (для уровней AI 0-3). Примечание: vestTypes0-3 не будет прочитан, если включен generateDynamicVests.
	//------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	vestTypes0[] = {"V_Press_F","V_Rangemaster_belt","V_BandollierB_blk","V_BandollierB_cbr","V_BandollierB_khk","V_BandollierB_oli","V_BandollierB_rgr","V_Chestrig_blk","V_Chestrig_khk","V_Chestrig_oli","V_Chestrig_rgr"};
	vestTypes1[] = {"V_Chestrig_blk","V_Chestrig_khk","V_Chestrig_oli","V_Chestrig_rgr","V_HarnessO_brn","V_HarnessO_gry","V_HarnessOGL_brn","V_HarnessOGL_gry","V_HarnessOSpec_brn","V_HarnessOSpec_gry","V_PlateCarrier1_blk","V_PlateCarrier1_rgr","V_PlateCarrier2_rgr","V_PlateCarrier3_rgr","V_PlateCarrierH_CTRG","V_PlateCarrierIA1_dgtl","V_PlateCarrierIA2_dgtl","V_PlateCarrierL_CTRG"};
	vestTypes2[] = {"V_TacVest_blk","V_TacVest_blk_POLICE","V_TacVest_brn","V_TacVest_camo","V_TacVest_khk","V_TacVest_oli","V_TacVestCamo_khk","V_TacVestIR_blk","V_I_G_resistanceLeader_F","V_PlateCarrier2_rgr","V_PlateCarrier3_rgr","V_PlateCarrierGL_blk","V_PlateCarrierGL_mtp","V_PlateCarrierGL_rgr","V_PlateCarrierH_CTRG","V_PlateCarrierIA1_dgtl","V_PlateCarrierIA2_dgtl","V_PlateCarrierIAGL_dgtl","V_PlateCarrierIAGL_oli","V_PlateCarrierL_CTRG","V_PlateCarrierSpec_blk","V_PlateCarrierSpec_mtp","V_PlateCarrierSpec_rgr"};
	vestTypes3[] = {"V_TacVest_blk_POLICE","V_PlateCarrierGL_blk","V_PlateCarrierGL_mtp","V_PlateCarrierGL_rgr","V_PlateCarrierIAGL_dgtl","V_PlateCarrierIAGL_oli","V_PlateCarrierSpec_blk","V_PlateCarrierSpec_mtp","V_PlateCarrierSpec_rgr"};
	
	//AI типы головных уборов. Примечание: headgearTypes0-3 не будет прочитан, если включен generateDynamicHeadgear.
	headgearTypes0[] = {"H_Cap_blk","H_Cap_blk_Raven","H_Cap_blu","H_Cap_brn_SPECOPS","H_Cap_grn","H_Cap_headphones","H_Cap_khaki_specops_UK","H_Cap_oli","H_Cap_press","H_Cap_red","H_Cap_tan","H_Cap_tan_specops_US","H_Watchcap_blk","H_Watchcap_camo"};
	headgearTypes1[] = {"H_Beret_02","H_Beret_blk","H_Beret_blk_POLICE","H_Beret_brn_SF","H_Beret_grn","H_Beret_grn_SF","H_Beret_ocamo","H_Beret_red","H_Shemag_khk","H_Shemag_olive","H_Shemag_olive_hs","H_Shemag_tan"};
	headgearTypes2[] = {"H_Beret_Colonel","H_HelmetB","H_HelmetB_black","H_HelmetB_camo","H_HelmetB_desert","H_HelmetB_grass","H_HelmetB_paint","H_HelmetB_plain_blk","H_HelmetB_sand","H_HelmetB_snakeskin","H_HelmetLeaderO_ocamo","H_HelmetLeaderO_oucamo","H_HelmetO_ocamo","H_HelmetO_oucamo","H_HelmetSpecB","H_HelmetSpecB_blk","H_HelmetSpecB_paint1","H_HelmetSpecB_paint2","H_HelmetSpecO_blk","H_HelmetSpecO_ocamo","H_CrewHelmetHeli_B","H_CrewHelmetHeli_I","H_CrewHelmetHeli_O","H_PilotHelmetHeli_B","H_PilotHelmetHeli_I","H_PilotHelmetHeli_O"};
	headgearTypes3[] = {"H_Beret_Colonel","H_HelmetB_camo","H_HelmetLeaderO_ocamo","H_HelmetLeaderO_oucamo","H_HelmetO_ocamo","H_HelmetO_oucamo","H_HelmetSpecO_blk","H_HelmetSpecO_ocamo","H_PilotHelmetHeli_B","H_PilotHelmetHeli_I","H_PilotHelmetHeli_O"};
	
	
	//Типы предметов AI Food / Loot. 
	// Примечание: foodLoot не будет прочитан, если включен generateDynamicFood.
	// Примечание: miscLoot не будет прочитан, если включен generateDynamicLoot.
	//------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	foodLoot[] = {"Exile_Item_GloriousKnakworst","Exile_Item_SausageGravy","Exile_Item_ChristmasTinner","Exile_Item_BBQSandwich","Exile_Item_Surstromming","Exile_Item_Catfood","Exile_Item_PlasticBottleFreshWater","Exile_Item_Beer","Exile_Item_Energydrink"};
	miscLoot[] = {"Exile_Item_Rope","Exile_Item_DuctTape","Exile_Item_ExtensionCord","Exile_Item_FuelCanisterEmpty","Exile_Item_JunkMetal","Exile_Item_LightBulb","Exile_Item_MetalBoard","Exile_Item_MetalPole","Exile_Item_CamoTentKit"};
	
	
	//Типы предметов AI toolbelt. Предметы из пояса добавляются в инвентарь ИИ после смерти. Формат: [имя класса предмета, вероятность предмета]
	//------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	toolsList0[] = {
		{"Exile_Item_XM8",0.90},{"ItemCompass",0.30},{"ItemMap",0.30},{"ItemGPS",0.00},{"ItemRadio",0.00}
	};
	toolsList1[] = {
		{"Exile_Item_XM8",0.90},{"ItemCompass",0.50},{"ItemMap",0.50},{"ItemGPS",0.10},{"ItemRadio",0.10}
	};
	toolsList2[] = {
		{"Exile_Item_XM8",0.90},{"ItemCompass",0.70},{"ItemMap",0.70},{"ItemGPS",0.20},{"ItemRadio",0.20}
	};
	toolsList3[] = {
		{"Exile_Item_XM8",0.90},{"ItemCompass",0.90},{"ItemMap",0.90},{"ItemGPS",0.30},{"ItemRadio",0.30}
	};
	
	
	//Типы предметов, используемые в AI. Эти предметы добавляются в инвентарь ИИ при создании юнита и могут использоваться ИИ. Формат: {имя класса предмета, вероятность предмета}
	//------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	gadgetsList0[] = {
		{"binocular",0.30},{"NVGoggles",0.00}
	};
	gadgetsList1[] = {
		{"binocular",0.50},{"NVGoggles",0.10}
	};
	gadgetsList2[] = {
		{"binocular",0.70},{"NVGoggles",0.20}
	};
	gadgetsList3[] = {
		{"binocular",0.90},{"NVGoggles",0.30}
	};
};
